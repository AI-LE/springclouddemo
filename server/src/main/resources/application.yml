spring:
  application:
    name: serve
  profiles:
    # 默认获取配置中心local配置，获取不到调用本地的application-local
    # 服务器部署会重置该参数
    active: server1
  main:
    allow-bean-definition-overriding: true
  jackson:
    serialization:
      write-dates-as-timestamps: true
---
server:
  port: 20001
eureka:
  instance:
    hostname: server1 # 设置主机名
  client:
    registerWithEureka: false # 是否向 Eureka 注册服务。该应用为服务注册中心，不需要自注册，设置为 false
    fetchRegistry: false      # 是否检索服务。该应用为服务注册中心，职责为注册和发现服务，无需检索服务，设置为 false
    serviceUrl:
      defaultZone: http://localhost:20002/eureka
    #是否启用湖区注册服务信息，因为这是一个单节点的EurekaServer，不需要同步其他的EurekaServer节点的数据，所以设置为false；
    fetch-registry: false
    #表示是否向eureka注册服务，即在自己的eureka中注册自己，默认为true，此处应该设置为false；
    register-with-eureka: false
  server:
    enableSelfPreservation: true # 服务中心是否开启自我保护
    renewalPercentThreshold: 0.85 #单位时间内多少服务无心跳开启自我保护，默认为85%
spring:
  profiles: server1

---
server:
  port: 20002
eureka:
  instance:
    hostname: server2 # 设置主机名
  client:
    registerWithEureka: false # 是否向 Eureka 注册服务。该应用为服务注册中心，不需要自注册，设置为 false
    fetchRegistry: false      # 是否检索服务。该应用为服务注册中心，职责为注册和发现服务，无需检索服务，设置为 false
    serviceUrl:
      defaultZone: http://localhost:20001/eureka
    #是否启用湖区注册服务信息，因为这是一个单节点的EurekaServer，不需要同步其他的EurekaServer节点的数据，所以设置为false；
    fetch-registry: false
    #表示是否向eureka注册服务，即在自己的eureka中注册自己，默认为true，此处应该设置为false；
    register-with-eureka: false
  server:
    enableSelfPreservation: true # 服务中心是否开启自我保护
    renewalPercentThreshold: 0.85 #单位时间内多少服务无心跳开启自我保护，默认为85%
spring:
  profiles: server2